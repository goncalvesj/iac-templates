name: DevOps Shared Infrastructure Pipeline
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
    rg-name: JPRG-ALZ-DevOps
    rg-location: westeurope
    main-template: main.bicep
    param-template: main.bicepparam
    context: Bicep/Azure-Shared-DevOps

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # - name: Deploy Resource Group        
      #   working-directory: ${{ env.context }}
      #   run: |
      #     az group create --name ${{ env.rg-name }}  --location ${{ env.rg-location }}

      - name: Bicep Lint
        run: |
          az bicep build --file ${{ env.context }}/${{ env.main-template }}
    
      # - name: Run Validate on Bicep Templates
      #   working-directory: ${{ env.context }}
      #   run: |
      #     az deployment group validate --template-file ${{ env.main-template }} --parameters ${{ env.param-template }} --resource-group ${{ env.rg-name }}

      - name: Run What If on Bicep Templates
        working-directory: ${{ env.context }}
        run: |
          az deployment group what-if \
          --template-file ${{ env.main-template }} \
          --parameters ${{ env.param-template }} \
          --resource-group ${{ env.rg-name }} > whatif
          
      - name: Create String Output
        id: whatif-string
        run: |
          WHATIF=$(cat whatif)
          
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Whatif Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "$WHATIF" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT