name: "Publish DotNet Container to GHCR"
description: "Generates and publishes a container using the .NET SDK"
inputs:
   working-directory:
     required: true
     description: ""
   dotnet-version:
     required: true
     description: ""
   image-name:
     required: true
     description: ""
   token:
     description: "github auth token (PAT, github token, or GitHub app token)"
     required: true

outputs:
  new-tag:
    description: "New image tag"
    value: ${{ steps.publish.outputs.new-tag }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
    
    - name: Login to GitHub Packages
      uses: docker/login-action@v3      
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.token }}

    - name: Publish
      id: publish
      shell: bash
      run: |
        cd ${{ inputs.working-directory }}
        
        # App Version is set in Container Image Tags in the .csproj file
        
        # Retrieve the tag from the .csproj file        
        csproj_file=$(find . -name "*.csproj" | head -n 1)        
        tag=$(grep '<ContainerImageTags>' "$csproj_file" | sed -E 's/.*<ContainerImageTags>(.*)<\/ContainerImageTags>.*/\1/')
        
        # Needs to be wrapped in single and double quotes to be passed as a parameter
        tags=$(echo "${{ github.run_id }};$tag;latest" | sed 's/.*/"&"/')        
        
        echo $tag
        echo $tags
        
        echo "new-tag=$(echo $tag)" >> $GITHUB_OUTPUT

        dotnet publish -t:PublishContainer -p ContainerImageTags=$tags \
        -p ContainerRegistry="ghcr.io" \
        -p ContainerRepository="${{ github.repository }}/${{ inputs.image-name }}"
